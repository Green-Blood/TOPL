Terminals unused in grammar

    AS
    ASSERT
    AT
    BACKQUOTE
    CLASS
    CONTINUE
    DEL
    DOT
    EXCEPT
    EXEC
    FINALLY
    FROM
    IMPORT
    IN
    IS
    LAMBDA
    LBRACE
    PASS
    RAISE
    RBRACE
    TRY
    WITH
    YIELD
    BREAK
    FOR


Grammar

    0 $accept: start $end

    1 start: file_input

    2 file_input: star_NEWLINE_stmt ENDMARKER

    3 pick_NEWLINE_stmt: NEWLINE
    4                  | stmt

    5 star_NEWLINE_stmt: star_NEWLINE_stmt pick_NEWLINE_stmt
    6                  | %empty

    7 opt_arglist: arglist
    8            | %empty

    9 funcdef: DEF NAME parameters COLON suite
   10        | COMPONENT NAME parameters COLON suite

   11 parameters: LPAR varargslist RPAR
   12           | LPAR RPAR

   13 varargslist: star_fpdef_COMMA fpdef opt_COMMA

   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef COMMA
   15                 | %empty

   16 opt_COMMA: COMMA
   17          | %empty

   18 fpdef: NAME
   19      | LPAR fplist RPAR

   20 fplist: fpdef star_fpdef_notest COMMA
   21       | fpdef star_fpdef_notest

   22 star_fpdef_notest: star_fpdef_notest COMMA fpdef
   23                  | %empty

   24 stmt: simple_stmt
   25     | compound_stmt

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI NEWLINE
   27            | small_stmt star_SEMI_small_stmt NEWLINE

   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI small_stmt
   29                     | %empty

   30 small_stmt: expr_stmt
   31           | print_stmt
   32           | input_stmt
   33           | return_stmt
   34           | global_stmt

   35 expr_stmt: test augassign test
   36          | test EQUAL star_EQUAL
   37          | test

   38 star_EQUAL: test EQUAL star_EQUAL
   39           | test

   40 augassign: PLUSEQUAL
   41          | MINEQUAL
   42          | STAREQUAL
   43          | SLASHEQUAL
   44          | PERCENTEQUAL
   45          | AMPEREQUAL
   46          | VBAREQUAL
   47          | CIRCUMFLEXEQUAL
   48          | LEFTSHIFTEQUAL
   49          | RIGHTSHIFTEQUAL
   50          | DOUBLESTAREQUAL
   51          | DOUBLESLASHEQUAL

   52 print_stmt: PRINT test

   53 input_stmt: INPUT test

   54 return_stmt: RETURN test
   55            | RETURN

   56 global_stmt: GLOBAL NAME star_COMMA_NAME

   57 star_COMMA_NAME: star_COMMA_NAME COMMA NAME
   58                | %empty

   59 compound_stmt: if_stmt
   60              | while_stmt
   61              | funcdef

   62 if_stmt: IF test COLON suite star_ELIF ELSE COLON suite
   63        | IF test COLON suite star_ELIF

   64 star_ELIF: star_ELIF ELIF test COLON suite
   65          | %empty

   66 while_stmt: WHILE test COLON suite

   67 suite: simple_stmt
   68      | NEWLINE INDENT plus_stmt DEDENT

   69 plus_stmt: plus_stmt stmt
   70          | stmt

   71 test: or_test

   72 or_test: and_test
   73        | or_test OR and_test

   74 and_test: not_test
   75         | and_test AND not_test

   76 not_test: NOT not_test
   77         | comparison

   78 comparison: expr
   79           | comparison comp_op expr

   80 comp_op: LESS
   81        | GREATER
   82        | EQEQUAL
   83        | EQEQEQUAL
   84        | GREATEREQUAL
   85        | LESSEQUAL
   86        | GRLT
   87        | NOTEQUAL

   88 expr: xor_expr
   89     | expr BAR xor_expr

   90 xor_expr: and_expr
   91         | xor_expr CIRCUMFLEX and_expr

   92 and_expr: shift_expr
   93         | and_expr AMPERSAND shift_expr

   94 shift_expr: arith_expr
   95           | shift_expr pick_LEFTSHIFT_RIGHTSHIFT arith_expr

   96 pick_LEFTSHIFT_RIGHTSHIFT: LEFTSHIFT
   97                          | RIGHTSHIFT

   98 arith_expr: term
   99           | arith_expr pick_PLUS_MINUS term

  100 pick_PLUS_MINUS: PLUS
  101                | MINUS

  102 term: factor
  103     | term pick_multop factor

  104 pick_multop: STAR
  105            | SLASH
  106            | PERCENT
  107            | DOUBLESLASH

  108 factor: pick_unop factor
  109       | power

  110 pick_unop: PLUS
  111          | MINUS
  112          | TILDE

  113 power: atom star_trailer DOUBLESTAR factor
  114      | atom star_trailer
  115      | atom LSQB test RSQB

  116 star_trailer: star_trailer trailer
  117             | %empty

  118 atom: LPAR opt_test RPAR
  119     | LSQB opt_listmaker RSQB
  120     | NAME
  121     | STRING
  122     | INT
  123     | FLOAT

  124 opt_test: test
  125         | %empty

  126 opt_listmaker: test star_COMMA_test opt_COMMA
  127              | %empty

  128 star_COMMA_test: star_COMMA_test COMMA test
  129                | %empty

  130 trailer: LPAR opt_arglist RPAR

  131 arglist: star_argument_COMMA test opt_COMMA

  132 star_argument_COMMA: star_argument_COMMA test COMMA
  133                    | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AS (258)
    ASSERT (259)
    AT (260)
    BACKQUOTE (261)
    CLASS (262)
    CONTINUE (263)
    DEL (264)
    DOT (265)
    EXCEPT (266)
    EXEC (267)
    FINALLY (268)
    FROM (269)
    IMPORT (270)
    IN (271)
    IS (272)
    LAMBDA (273)
    LBRACE (274)
    LSQB (275) 115 119
    PASS (276)
    RAISE (277)
    RBRACE (278)
    RSQB (279) 115 119
    TRY (280)
    WITH (281)
    YIELD (282)
    AMPEREQUAL (283) 45
    AMPERSAND (284) 93
    AND (285) 75
    BAR (286) 89
    BREAK (287)
    CIRCUMFLEX (288) 91
    CIRCUMFLEXEQUAL (289) 47
    COLON (290) 9 10 62 63 64 66
    COMMA (291) 14 16 20 22 57 128 132
    DEDENT (292) 68
    DEF (293) 9
    COMPONENT (294) 10
    DOUBLESLASHEQUAL (295) 51
    DOUBLESTAREQUAL (296) 50
    ELIF (297) 64
    ELSE (298) 62
    ENDMARKER (299) 2
    EQEQUAL (300) 82
    EQEQEQUAL (301) 83
    FOR (302)
    GLOBAL (303) 56
    GREATER (304) 81
    GREATEREQUAL (305) 84
    GRLT (306) 86
    IF (307) 62 63
    INDENT (308) 68
    LEFTSHIFTEQUAL (309) 48
    LESS (310) 80
    LESSEQUAL (311) 85
    LPAR (312) 11 12 19 118 130
    MINEQUAL (313) 41
    NEWLINE (314) 3 26 27 68
    NOT (315) 76
    NOTEQUAL (316) 87
    OR (317) 73
    PERCENTEQUAL (318) 44
    PLUSEQUAL (319) 40
    PRINT (320) 52
    INPUT (321) 53
    RETURN (322) 54 55
    RIGHTSHIFTEQUAL (323) 49
    RPAR (324) 11 12 19 118 130
    SEMI (325) 26 28
    SLASHEQUAL (326) 43
    STAREQUAL (327) 42
    TILDE (328) 112
    VBAREQUAL (329) 46
    WHILE (330) 66
    INT <intNumber> (331) 122
    FLOAT <fltNumber> (332) 123
    NAME <name> (333) 9 10 18 56 57 120
    STRING <str> (334) 121
    EQUAL (335) 36 38
    LEFTSHIFT (336) 96
    RIGHTSHIFT (337) 97
    PLUS (338) 100 110
    MINUS (339) 101 111
    STAR (340) 104
    SLASH (341) 105
    PERCENT (342) 106
    DOUBLESLASH (343) 107
    DOUBLESTAR (344) 113


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    start (91)
        on left: 1
        on right: 0
    file_input (92)
        on left: 2
        on right: 1
    pick_NEWLINE_stmt (93)
        on left: 3 4
        on right: 5
    star_NEWLINE_stmt (94)
        on left: 5 6
        on right: 2 5
    opt_arglist <vec> (95)
        on left: 7 8
        on right: 130
    funcdef <node> (96)
        on left: 9 10
        on right: 61
    parameters <node> (97)
        on left: 11 12
        on right: 9 10
    varargslist <vec> (98)
        on left: 13
        on right: 11
    star_fpdef_COMMA <vec> (99)
        on left: 14 15
        on right: 13 14
    opt_COMMA <node> (100)
        on left: 16 17
        on right: 13 126 131
    fpdef <node> (101)
        on left: 18 19
        on right: 13 14 20 21 22
    fplist (102)
        on left: 20 21
        on right: 19
    star_fpdef_notest (103)
        on left: 22 23
        on right: 20 21 22
    stmt <node> (104)
        on left: 24 25
        on right: 4 69 70
    simple_stmt <node> (105)
        on left: 26 27
        on right: 24 67
    star_SEMI_small_stmt (106)
        on left: 28 29
        on right: 26 27 28
    small_stmt <node> (107)
        on left: 30 31 32 33 34
        on right: 26 27 28
    expr_stmt <node> (108)
        on left: 35 36 37
        on right: 30
    star_EQUAL <node> (109)
        on left: 38 39
        on right: 36 38
    augassign <intNumber> (110)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 35
    print_stmt <node> (111)
        on left: 52
        on right: 31
    input_stmt <node> (112)
        on left: 53
        on right: 32
    return_stmt <node> (113)
        on left: 54 55
        on right: 33
    global_stmt (114)
        on left: 56
        on right: 34
    star_COMMA_NAME (115)
        on left: 57 58
        on right: 56 57
    compound_stmt <node> (116)
        on left: 59 60 61
        on right: 25
    if_stmt <node> (117)
        on left: 62 63
        on right: 59
    star_ELIF <node> (118)
        on left: 64 65
        on right: 62 63 64
    while_stmt <node> (119)
        on left: 66
        on right: 60
    suite <node> (120)
        on left: 67 68
        on right: 9 10 62 63 64 66
    plus_stmt <vec> (121)
        on left: 69 70
        on right: 68 69
    test <node> (122)
        on left: 71
        on right: 35 36 37 38 39 52 53 54 62 63 64 66 115 124 126 128 131 132
    or_test <node> (123)
        on left: 72 73
        on right: 71 73
    and_test <node> (124)
        on left: 74 75
        on right: 72 73 75
    not_test <node> (125)
        on left: 76 77
        on right: 74 75 76
    comparison <node> (126)
        on left: 78 79
        on right: 77 79
    comp_op <intNumber> (127)
        on left: 80 81 82 83 84 85 86 87
        on right: 79
    expr <node> (128)
        on left: 88 89
        on right: 78 79 89
    xor_expr <node> (129)
        on left: 90 91
        on right: 88 89 91
    and_expr <node> (130)
        on left: 92 93
        on right: 90 91 93
    shift_expr <node> (131)
        on left: 94 95
        on right: 92 93 95
    pick_LEFTSHIFT_RIGHTSHIFT <intNumber> (132)
        on left: 96 97
        on right: 95
    arith_expr <node> (133)
        on left: 98 99
        on right: 94 95 99
    pick_PLUS_MINUS <intNumber> (134)
        on left: 100 101
        on right: 99
    term <node> (135)
        on left: 102 103
        on right: 98 99 103
    pick_multop <intNumber> (136)
        on left: 104 105 106 107
        on right: 103
    factor <node> (137)
        on left: 108 109
        on right: 102 103 108 113
    pick_unop <intNumber> (138)
        on left: 110 111 112
        on right: 108
    power <node> (139)
        on left: 113 114 115
        on right: 109
    star_trailer <node> (140)
        on left: 116 117
        on right: 113 114 116
    atom <node> (141)
        on left: 118 119 120 121 122 123
        on right: 113 114 115
    opt_test <node> (142)
        on left: 124 125
        on right: 118
    opt_listmaker <node> (143)
        on left: 126 127
        on right: 119
    star_COMMA_test <node> (144)
        on left: 128 129
        on right: 126 128
    trailer <node> (145)
        on left: 130
        on right: 116
    arglist <vec> (146)
        on left: 131
        on right: 7
    star_argument_COMMA <vec> (147)
        on left: 132 133
        on right: 131 132


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (star_NEWLINE_stmt)

    start              go to state 1
    file_input         go to state 2
    star_NEWLINE_stmt  go to state 3


State 1

    0 $accept: start . $end

    $end  shift, and go to state 4


State 2

    1 start: file_input .

    $default  reduce using rule 1 (start)


State 3

    2 file_input: star_NEWLINE_stmt . ENDMARKER
    5 star_NEWLINE_stmt: star_NEWLINE_stmt . pick_NEWLINE_stmt

    LSQB       shift, and go to state 5
    DEF        shift, and go to state 6
    COMPONENT  shift, and go to state 7
    ENDMARKER  shift, and go to state 8
    GLOBAL     shift, and go to state 9
    IF         shift, and go to state 10
    LPAR       shift, and go to state 11
    NEWLINE    shift, and go to state 12
    NOT        shift, and go to state 13
    PRINT      shift, and go to state 14
    INPUT      shift, and go to state 15
    RETURN     shift, and go to state 16
    TILDE      shift, and go to state 17
    WHILE      shift, and go to state 18
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    NAME       shift, and go to state 21
    STRING     shift, and go to state 22
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24

    pick_NEWLINE_stmt  go to state 25
    funcdef            go to state 26
    stmt               go to state 27
    simple_stmt        go to state 28
    small_stmt         go to state 29
    expr_stmt          go to state 30
    print_stmt         go to state 31
    input_stmt         go to state 32
    return_stmt        go to state 33
    global_stmt        go to state 34
    compound_stmt      go to state 35
    if_stmt            go to state 36
    while_stmt         go to state 37
    test               go to state 38
    or_test            go to state 39
    and_test           go to state 40
    not_test           go to state 41
    comparison         go to state 42
    expr               go to state 43
    xor_expr           go to state 44
    and_expr           go to state 45
    shift_expr         go to state 46
    arith_expr         go to state 47
    term               go to state 48
    factor             go to state 49
    pick_unop          go to state 50
    power              go to state 51
    atom               go to state 52


State 4

    0 $accept: start $end .

    $default  accept


State 5

  119 atom: LSQB . opt_listmaker RSQB

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    $default  reduce using rule 127 (opt_listmaker)

    test           go to state 53
    or_test        go to state 39
    and_test       go to state 40
    not_test       go to state 41
    comparison     go to state 42
    expr           go to state 43
    xor_expr       go to state 44
    and_expr       go to state 45
    shift_expr     go to state 46
    arith_expr     go to state 47
    term           go to state 48
    factor         go to state 49
    pick_unop      go to state 50
    power          go to state 51
    atom           go to state 52
    opt_listmaker  go to state 54


State 6

    9 funcdef: DEF . NAME parameters COLON suite

    NAME  shift, and go to state 55


State 7

   10 funcdef: COMPONENT . NAME parameters COLON suite

    NAME  shift, and go to state 56


State 8

    2 file_input: star_NEWLINE_stmt ENDMARKER .

    $default  reduce using rule 2 (file_input)


State 9

   56 global_stmt: GLOBAL . NAME star_COMMA_NAME

    NAME  shift, and go to state 57


State 10

   62 if_stmt: IF . test COLON suite star_ELIF ELSE COLON suite
   63        | IF . test COLON suite star_ELIF

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 58
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 11

  118 atom: LPAR . opt_test RPAR

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    $default  reduce using rule 125 (opt_test)

    test        go to state 59
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52
    opt_test    go to state 60


State 12

    3 pick_NEWLINE_stmt: NEWLINE .

    $default  reduce using rule 3 (pick_NEWLINE_stmt)


State 13

   76 not_test: NOT . not_test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    not_test    go to state 61
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 14

   52 print_stmt: PRINT . test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 62
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 15

   53 input_stmt: INPUT . test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 63
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 16

   54 return_stmt: RETURN . test
   55            | RETURN .

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    $default  reduce using rule 55 (return_stmt)

    test        go to state 64
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 17

  112 pick_unop: TILDE .

    $default  reduce using rule 112 (pick_unop)


State 18

   66 while_stmt: WHILE . test COLON suite

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 65
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 19

  122 atom: INT .

    $default  reduce using rule 122 (atom)


State 20

  123 atom: FLOAT .

    $default  reduce using rule 123 (atom)


State 21

  120 atom: NAME .

    $default  reduce using rule 120 (atom)


State 22

  121 atom: STRING .

    $default  reduce using rule 121 (atom)


State 23

  110 pick_unop: PLUS .

    $default  reduce using rule 110 (pick_unop)


State 24

  111 pick_unop: MINUS .

    $default  reduce using rule 111 (pick_unop)


State 25

    5 star_NEWLINE_stmt: star_NEWLINE_stmt pick_NEWLINE_stmt .

    $default  reduce using rule 5 (star_NEWLINE_stmt)


State 26

   61 compound_stmt: funcdef .

    $default  reduce using rule 61 (compound_stmt)


State 27

    4 pick_NEWLINE_stmt: stmt .

    $default  reduce using rule 4 (pick_NEWLINE_stmt)


State 28

   24 stmt: simple_stmt .

    $default  reduce using rule 24 (stmt)


State 29

   26 simple_stmt: small_stmt . star_SEMI_small_stmt SEMI NEWLINE
   27            | small_stmt . star_SEMI_small_stmt NEWLINE

    $default  reduce using rule 29 (star_SEMI_small_stmt)

    star_SEMI_small_stmt  go to state 66


State 30

   30 small_stmt: expr_stmt .

    $default  reduce using rule 30 (small_stmt)


State 31

   31 small_stmt: print_stmt .

    $default  reduce using rule 31 (small_stmt)


State 32

   32 small_stmt: input_stmt .

    $default  reduce using rule 32 (small_stmt)


State 33

   33 small_stmt: return_stmt .

    $default  reduce using rule 33 (small_stmt)


State 34

   34 small_stmt: global_stmt .

    $default  reduce using rule 34 (small_stmt)


State 35

   25 stmt: compound_stmt .

    $default  reduce using rule 25 (stmt)


State 36

   59 compound_stmt: if_stmt .

    $default  reduce using rule 59 (compound_stmt)


State 37

   60 compound_stmt: while_stmt .

    $default  reduce using rule 60 (compound_stmt)


State 38

   35 expr_stmt: test . augassign test
   36          | test . EQUAL star_EQUAL
   37          | test .

    AMPEREQUAL        shift, and go to state 67
    CIRCUMFLEXEQUAL   shift, and go to state 68
    DOUBLESLASHEQUAL  shift, and go to state 69
    DOUBLESTAREQUAL   shift, and go to state 70
    LEFTSHIFTEQUAL    shift, and go to state 71
    MINEQUAL          shift, and go to state 72
    PERCENTEQUAL      shift, and go to state 73
    PLUSEQUAL         shift, and go to state 74
    RIGHTSHIFTEQUAL   shift, and go to state 75
    SLASHEQUAL        shift, and go to state 76
    STAREQUAL         shift, and go to state 77
    VBAREQUAL         shift, and go to state 78
    EQUAL             shift, and go to state 79

    $default  reduce using rule 37 (expr_stmt)

    augassign  go to state 80


State 39

   71 test: or_test .
   73 or_test: or_test . OR and_test

    OR  shift, and go to state 81

    $default  reduce using rule 71 (test)


State 40

   72 or_test: and_test .
   75 and_test: and_test . AND not_test

    AND  shift, and go to state 82

    $default  reduce using rule 72 (or_test)


State 41

   74 and_test: not_test .

    $default  reduce using rule 74 (and_test)


State 42

   77 not_test: comparison .
   79 comparison: comparison . comp_op expr

    EQEQUAL       shift, and go to state 83
    EQEQEQUAL     shift, and go to state 84
    GREATER       shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    GRLT          shift, and go to state 87
    LESS          shift, and go to state 88
    LESSEQUAL     shift, and go to state 89
    NOTEQUAL      shift, and go to state 90

    $default  reduce using rule 77 (not_test)

    comp_op  go to state 91


State 43

   78 comparison: expr .
   89 expr: expr . BAR xor_expr

    BAR  shift, and go to state 92

    $default  reduce using rule 78 (comparison)


State 44

   88 expr: xor_expr .
   91 xor_expr: xor_expr . CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 93

    $default  reduce using rule 88 (expr)


State 45

   90 xor_expr: and_expr .
   93 and_expr: and_expr . AMPERSAND shift_expr

    AMPERSAND  shift, and go to state 94

    $default  reduce using rule 90 (xor_expr)


State 46

   92 and_expr: shift_expr .
   95 shift_expr: shift_expr . pick_LEFTSHIFT_RIGHTSHIFT arith_expr

    LEFTSHIFT   shift, and go to state 95
    RIGHTSHIFT  shift, and go to state 96

    $default  reduce using rule 92 (and_expr)

    pick_LEFTSHIFT_RIGHTSHIFT  go to state 97


State 47

   94 shift_expr: arith_expr .
   99 arith_expr: arith_expr . pick_PLUS_MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 94 (shift_expr)

    pick_PLUS_MINUS  go to state 100


State 48

   98 arith_expr: term .
  103 term: term . pick_multop factor

    STAR         shift, and go to state 101
    SLASH        shift, and go to state 102
    PERCENT      shift, and go to state 103
    DOUBLESLASH  shift, and go to state 104

    $default  reduce using rule 98 (arith_expr)

    pick_multop  go to state 105


State 49

  102 term: factor .

    $default  reduce using rule 102 (term)


State 50

  108 factor: pick_unop . factor

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    factor     go to state 106
    pick_unop  go to state 50
    power      go to state 51
    atom       go to state 52


State 51

  109 factor: power .

    $default  reduce using rule 109 (factor)


State 52

  113 power: atom . star_trailer DOUBLESTAR factor
  114      | atom . star_trailer
  115      | atom . LSQB test RSQB

    LSQB  shift, and go to state 107

    $default  reduce using rule 117 (star_trailer)

    star_trailer  go to state 108


State 53

  126 opt_listmaker: test . star_COMMA_test opt_COMMA

    $default  reduce using rule 129 (star_COMMA_test)

    star_COMMA_test  go to state 109


State 54

  119 atom: LSQB opt_listmaker . RSQB

    RSQB  shift, and go to state 110


State 55

    9 funcdef: DEF NAME . parameters COLON suite

    LPAR  shift, and go to state 111

    parameters  go to state 112


State 56

   10 funcdef: COMPONENT NAME . parameters COLON suite

    LPAR  shift, and go to state 111

    parameters  go to state 113


State 57

   56 global_stmt: GLOBAL NAME . star_COMMA_NAME

    $default  reduce using rule 58 (star_COMMA_NAME)

    star_COMMA_NAME  go to state 114


State 58

   62 if_stmt: IF test . COLON suite star_ELIF ELSE COLON suite
   63        | IF test . COLON suite star_ELIF

    COLON  shift, and go to state 115


State 59

  124 opt_test: test .

    $default  reduce using rule 124 (opt_test)


State 60

  118 atom: LPAR opt_test . RPAR

    RPAR  shift, and go to state 116


State 61

   76 not_test: NOT not_test .

    $default  reduce using rule 76 (not_test)


State 62

   52 print_stmt: PRINT test .

    $default  reduce using rule 52 (print_stmt)


State 63

   53 input_stmt: INPUT test .

    $default  reduce using rule 53 (input_stmt)


State 64

   54 return_stmt: RETURN test .

    $default  reduce using rule 54 (return_stmt)


State 65

   66 while_stmt: WHILE test . COLON suite

    COLON  shift, and go to state 117


State 66

   26 simple_stmt: small_stmt star_SEMI_small_stmt . SEMI NEWLINE
   27            | small_stmt star_SEMI_small_stmt . NEWLINE
   28 star_SEMI_small_stmt: star_SEMI_small_stmt . SEMI small_stmt

    NEWLINE  shift, and go to state 118
    SEMI     shift, and go to state 119


State 67

   45 augassign: AMPEREQUAL .

    $default  reduce using rule 45 (augassign)


State 68

   47 augassign: CIRCUMFLEXEQUAL .

    $default  reduce using rule 47 (augassign)


State 69

   51 augassign: DOUBLESLASHEQUAL .

    $default  reduce using rule 51 (augassign)


State 70

   50 augassign: DOUBLESTAREQUAL .

    $default  reduce using rule 50 (augassign)


State 71

   48 augassign: LEFTSHIFTEQUAL .

    $default  reduce using rule 48 (augassign)


State 72

   41 augassign: MINEQUAL .

    $default  reduce using rule 41 (augassign)


State 73

   44 augassign: PERCENTEQUAL .

    $default  reduce using rule 44 (augassign)


State 74

   40 augassign: PLUSEQUAL .

    $default  reduce using rule 40 (augassign)


State 75

   49 augassign: RIGHTSHIFTEQUAL .

    $default  reduce using rule 49 (augassign)


State 76

   43 augassign: SLASHEQUAL .

    $default  reduce using rule 43 (augassign)


State 77

   42 augassign: STAREQUAL .

    $default  reduce using rule 42 (augassign)


State 78

   46 augassign: VBAREQUAL .

    $default  reduce using rule 46 (augassign)


State 79

   36 expr_stmt: test EQUAL . star_EQUAL

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    star_EQUAL  go to state 120
    test        go to state 121
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 80

   35 expr_stmt: test augassign . test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 122
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 81

   73 or_test: or_test OR . and_test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    and_test    go to state 123
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 82

   75 and_test: and_test AND . not_test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    not_test    go to state 124
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 83

   82 comp_op: EQEQUAL .

    $default  reduce using rule 82 (comp_op)


State 84

   83 comp_op: EQEQEQUAL .

    $default  reduce using rule 83 (comp_op)


State 85

   81 comp_op: GREATER .

    $default  reduce using rule 81 (comp_op)


State 86

   84 comp_op: GREATEREQUAL .

    $default  reduce using rule 84 (comp_op)


State 87

   86 comp_op: GRLT .

    $default  reduce using rule 86 (comp_op)


State 88

   80 comp_op: LESS .

    $default  reduce using rule 80 (comp_op)


State 89

   85 comp_op: LESSEQUAL .

    $default  reduce using rule 85 (comp_op)


State 90

   87 comp_op: NOTEQUAL .

    $default  reduce using rule 87 (comp_op)


State 91

   79 comparison: comparison comp_op . expr

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    expr        go to state 125
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 92

   89 expr: expr BAR . xor_expr

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    xor_expr    go to state 126
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 93

   91 xor_expr: xor_expr CIRCUMFLEX . and_expr

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    and_expr    go to state 127
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 94

   93 and_expr: and_expr AMPERSAND . shift_expr

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    shift_expr  go to state 128
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 95

   96 pick_LEFTSHIFT_RIGHTSHIFT: LEFTSHIFT .

    $default  reduce using rule 96 (pick_LEFTSHIFT_RIGHTSHIFT)


State 96

   97 pick_LEFTSHIFT_RIGHTSHIFT: RIGHTSHIFT .

    $default  reduce using rule 97 (pick_LEFTSHIFT_RIGHTSHIFT)


State 97

   95 shift_expr: shift_expr pick_LEFTSHIFT_RIGHTSHIFT . arith_expr

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    arith_expr  go to state 129
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 98

  100 pick_PLUS_MINUS: PLUS .

    $default  reduce using rule 100 (pick_PLUS_MINUS)


State 99

  101 pick_PLUS_MINUS: MINUS .

    $default  reduce using rule 101 (pick_PLUS_MINUS)


State 100

   99 arith_expr: arith_expr pick_PLUS_MINUS . term

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    term       go to state 130
    factor     go to state 49
    pick_unop  go to state 50
    power      go to state 51
    atom       go to state 52


State 101

  104 pick_multop: STAR .

    $default  reduce using rule 104 (pick_multop)


State 102

  105 pick_multop: SLASH .

    $default  reduce using rule 105 (pick_multop)


State 103

  106 pick_multop: PERCENT .

    $default  reduce using rule 106 (pick_multop)


State 104

  107 pick_multop: DOUBLESLASH .

    $default  reduce using rule 107 (pick_multop)


State 105

  103 term: term pick_multop . factor

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    factor     go to state 131
    pick_unop  go to state 50
    power      go to state 51
    atom       go to state 52


State 106

  108 factor: pick_unop factor .

    $default  reduce using rule 108 (factor)


State 107

  115 power: atom LSQB . test RSQB

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 132
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 108

  113 power: atom star_trailer . DOUBLESTAR factor
  114      | atom star_trailer .
  116 star_trailer: star_trailer . trailer

    LPAR        shift, and go to state 133
    DOUBLESTAR  shift, and go to state 134

    $default  reduce using rule 114 (power)

    trailer  go to state 135


State 109

  126 opt_listmaker: test star_COMMA_test . opt_COMMA
  128 star_COMMA_test: star_COMMA_test . COMMA test

    COMMA  shift, and go to state 136

    $default  reduce using rule 17 (opt_COMMA)

    opt_COMMA  go to state 137


State 110

  119 atom: LSQB opt_listmaker RSQB .

    $default  reduce using rule 119 (atom)


State 111

   11 parameters: LPAR . varargslist RPAR
   12           | LPAR . RPAR

    RPAR  shift, and go to state 138

    $default  reduce using rule 15 (star_fpdef_COMMA)

    varargslist       go to state 139
    star_fpdef_COMMA  go to state 140


State 112

    9 funcdef: DEF NAME parameters . COLON suite

    COLON  shift, and go to state 141


State 113

   10 funcdef: COMPONENT NAME parameters . COLON suite

    COLON  shift, and go to state 142


State 114

   56 global_stmt: GLOBAL NAME star_COMMA_NAME .
   57 star_COMMA_NAME: star_COMMA_NAME . COMMA NAME

    COMMA  shift, and go to state 143

    $default  reduce using rule 56 (global_stmt)


State 115

   62 if_stmt: IF test COLON . suite star_ELIF ELSE COLON suite
   63        | IF test COLON . suite star_ELIF

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 146
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 116

  118 atom: LPAR opt_test RPAR .

    $default  reduce using rule 118 (atom)


State 117

   66 while_stmt: WHILE test COLON . suite

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 147
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 118

   27 simple_stmt: small_stmt star_SEMI_small_stmt NEWLINE .

    $default  reduce using rule 27 (simple_stmt)


State 119

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI . NEWLINE
   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI . small_stmt

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 148
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    small_stmt   go to state 149
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 120

   36 expr_stmt: test EQUAL star_EQUAL .

    $default  reduce using rule 36 (expr_stmt)


State 121

   38 star_EQUAL: test . EQUAL star_EQUAL
   39           | test .

    EQUAL  shift, and go to state 150

    $default  reduce using rule 39 (star_EQUAL)


State 122

   35 expr_stmt: test augassign test .

    $default  reduce using rule 35 (expr_stmt)


State 123

   73 or_test: or_test OR and_test .
   75 and_test: and_test . AND not_test

    AND  shift, and go to state 82

    $default  reduce using rule 73 (or_test)


State 124

   75 and_test: and_test AND not_test .

    $default  reduce using rule 75 (and_test)


State 125

   79 comparison: comparison comp_op expr .
   89 expr: expr . BAR xor_expr

    BAR  shift, and go to state 92

    $default  reduce using rule 79 (comparison)


State 126

   89 expr: expr BAR xor_expr .
   91 xor_expr: xor_expr . CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 93

    $default  reduce using rule 89 (expr)


State 127

   91 xor_expr: xor_expr CIRCUMFLEX and_expr .
   93 and_expr: and_expr . AMPERSAND shift_expr

    AMPERSAND  shift, and go to state 94

    $default  reduce using rule 91 (xor_expr)


State 128

   93 and_expr: and_expr AMPERSAND shift_expr .
   95 shift_expr: shift_expr . pick_LEFTSHIFT_RIGHTSHIFT arith_expr

    LEFTSHIFT   shift, and go to state 95
    RIGHTSHIFT  shift, and go to state 96

    $default  reduce using rule 93 (and_expr)

    pick_LEFTSHIFT_RIGHTSHIFT  go to state 97


State 129

   95 shift_expr: shift_expr pick_LEFTSHIFT_RIGHTSHIFT arith_expr .
   99 arith_expr: arith_expr . pick_PLUS_MINUS term

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99

    $default  reduce using rule 95 (shift_expr)

    pick_PLUS_MINUS  go to state 100


State 130

   99 arith_expr: arith_expr pick_PLUS_MINUS term .
  103 term: term . pick_multop factor

    STAR         shift, and go to state 101
    SLASH        shift, and go to state 102
    PERCENT      shift, and go to state 103
    DOUBLESLASH  shift, and go to state 104

    $default  reduce using rule 99 (arith_expr)

    pick_multop  go to state 105


State 131

  103 term: term pick_multop factor .

    $default  reduce using rule 103 (term)


State 132

  115 power: atom LSQB test . RSQB

    RSQB  shift, and go to state 151


State 133

  130 trailer: LPAR . opt_arglist RPAR

    RPAR      reduce using rule 8 (opt_arglist)
    $default  reduce using rule 133 (star_argument_COMMA)

    opt_arglist          go to state 152
    arglist              go to state 153
    star_argument_COMMA  go to state 154


State 134

  113 power: atom star_trailer DOUBLESTAR . factor

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    factor     go to state 155
    pick_unop  go to state 50
    power      go to state 51
    atom       go to state 52


State 135

  116 star_trailer: star_trailer trailer .

    $default  reduce using rule 116 (star_trailer)


State 136

   16 opt_COMMA: COMMA .
  128 star_COMMA_test: star_COMMA_test COMMA . test

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    $default  reduce using rule 16 (opt_COMMA)

    test        go to state 156
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 137

  126 opt_listmaker: test star_COMMA_test opt_COMMA .

    $default  reduce using rule 126 (opt_listmaker)


State 138

   12 parameters: LPAR RPAR .

    $default  reduce using rule 12 (parameters)


State 139

   11 parameters: LPAR varargslist . RPAR

    RPAR  shift, and go to state 157


State 140

   13 varargslist: star_fpdef_COMMA . fpdef opt_COMMA
   14 star_fpdef_COMMA: star_fpdef_COMMA . fpdef COMMA

    LPAR  shift, and go to state 158
    NAME  shift, and go to state 159

    fpdef  go to state 160


State 141

    9 funcdef: DEF NAME parameters COLON . suite

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 161
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 142

   10 funcdef: COMPONENT NAME parameters COLON . suite

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 162
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 143

   57 star_COMMA_NAME: star_COMMA_NAME COMMA . NAME

    NAME  shift, and go to state 163


State 144

   68 suite: NEWLINE . INDENT plus_stmt DEDENT

    INDENT  shift, and go to state 164


State 145

   67 suite: simple_stmt .

    $default  reduce using rule 67 (suite)


State 146

   62 if_stmt: IF test COLON suite . star_ELIF ELSE COLON suite
   63        | IF test COLON suite . star_ELIF

    $default  reduce using rule 65 (star_ELIF)

    star_ELIF  go to state 165


State 147

   66 while_stmt: WHILE test COLON suite .

    $default  reduce using rule 66 (while_stmt)


State 148

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI NEWLINE .

    $default  reduce using rule 26 (simple_stmt)


State 149

   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI small_stmt .

    $default  reduce using rule 28 (star_SEMI_small_stmt)


State 150

   38 star_EQUAL: test EQUAL . star_EQUAL

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    star_EQUAL  go to state 166
    test        go to state 121
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 151

  115 power: atom LSQB test RSQB .

    $default  reduce using rule 115 (power)


State 152

  130 trailer: LPAR opt_arglist . RPAR

    RPAR  shift, and go to state 167


State 153

    7 opt_arglist: arglist .

    $default  reduce using rule 7 (opt_arglist)


State 154

  131 arglist: star_argument_COMMA . test opt_COMMA
  132 star_argument_COMMA: star_argument_COMMA . test COMMA

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 168
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 155

  113 power: atom star_trailer DOUBLESTAR factor .

    $default  reduce using rule 113 (power)


State 156

  128 star_COMMA_test: star_COMMA_test COMMA test .

    $default  reduce using rule 128 (star_COMMA_test)


State 157

   11 parameters: LPAR varargslist RPAR .

    $default  reduce using rule 11 (parameters)


State 158

   19 fpdef: LPAR . fplist RPAR

    LPAR  shift, and go to state 158
    NAME  shift, and go to state 159

    fpdef   go to state 169
    fplist  go to state 170


State 159

   18 fpdef: NAME .

    $default  reduce using rule 18 (fpdef)


State 160

   13 varargslist: star_fpdef_COMMA fpdef . opt_COMMA
   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef . COMMA

    COMMA  shift, and go to state 171

    $default  reduce using rule 17 (opt_COMMA)

    opt_COMMA  go to state 172


State 161

    9 funcdef: DEF NAME parameters COLON suite .

    $default  reduce using rule 9 (funcdef)


State 162

   10 funcdef: COMPONENT NAME parameters COLON suite .

    $default  reduce using rule 10 (funcdef)


State 163

   57 star_COMMA_NAME: star_COMMA_NAME COMMA NAME .

    $default  reduce using rule 57 (star_COMMA_NAME)


State 164

   68 suite: NEWLINE INDENT . plus_stmt DEDENT

    LSQB       shift, and go to state 5
    DEF        shift, and go to state 6
    COMPONENT  shift, and go to state 7
    GLOBAL     shift, and go to state 9
    IF         shift, and go to state 10
    LPAR       shift, and go to state 11
    NOT        shift, and go to state 13
    PRINT      shift, and go to state 14
    INPUT      shift, and go to state 15
    RETURN     shift, and go to state 16
    TILDE      shift, and go to state 17
    WHILE      shift, and go to state 18
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    NAME       shift, and go to state 21
    STRING     shift, and go to state 22
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24

    funcdef        go to state 26
    stmt           go to state 173
    simple_stmt    go to state 28
    small_stmt     go to state 29
    expr_stmt      go to state 30
    print_stmt     go to state 31
    input_stmt     go to state 32
    return_stmt    go to state 33
    global_stmt    go to state 34
    compound_stmt  go to state 35
    if_stmt        go to state 36
    while_stmt     go to state 37
    plus_stmt      go to state 174
    test           go to state 38
    or_test        go to state 39
    and_test       go to state 40
    not_test       go to state 41
    comparison     go to state 42
    expr           go to state 43
    xor_expr       go to state 44
    and_expr       go to state 45
    shift_expr     go to state 46
    arith_expr     go to state 47
    term           go to state 48
    factor         go to state 49
    pick_unop      go to state 50
    power          go to state 51
    atom           go to state 52


State 165

   62 if_stmt: IF test COLON suite star_ELIF . ELSE COLON suite
   63        | IF test COLON suite star_ELIF .
   64 star_ELIF: star_ELIF . ELIF test COLON suite

    ELIF  shift, and go to state 175
    ELSE  shift, and go to state 176

    $default  reduce using rule 63 (if_stmt)


State 166

   38 star_EQUAL: test EQUAL star_EQUAL .

    $default  reduce using rule 38 (star_EQUAL)


State 167

  130 trailer: LPAR opt_arglist RPAR .

    $default  reduce using rule 130 (trailer)


State 168

  131 arglist: star_argument_COMMA test . opt_COMMA
  132 star_argument_COMMA: star_argument_COMMA test . COMMA

    COMMA  shift, and go to state 177

    $default  reduce using rule 17 (opt_COMMA)

    opt_COMMA  go to state 178


State 169

   20 fplist: fpdef . star_fpdef_notest COMMA
   21       | fpdef . star_fpdef_notest

    $default  reduce using rule 23 (star_fpdef_notest)

    star_fpdef_notest  go to state 179


State 170

   19 fpdef: LPAR fplist . RPAR

    RPAR  shift, and go to state 180


State 171

   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef COMMA .
   16 opt_COMMA: COMMA .

    RPAR      reduce using rule 16 (opt_COMMA)
    $default  reduce using rule 14 (star_fpdef_COMMA)


State 172

   13 varargslist: star_fpdef_COMMA fpdef opt_COMMA .

    $default  reduce using rule 13 (varargslist)


State 173

   70 plus_stmt: stmt .

    $default  reduce using rule 70 (plus_stmt)


State 174

   68 suite: NEWLINE INDENT plus_stmt . DEDENT
   69 plus_stmt: plus_stmt . stmt

    LSQB       shift, and go to state 5
    DEDENT     shift, and go to state 181
    DEF        shift, and go to state 6
    COMPONENT  shift, and go to state 7
    GLOBAL     shift, and go to state 9
    IF         shift, and go to state 10
    LPAR       shift, and go to state 11
    NOT        shift, and go to state 13
    PRINT      shift, and go to state 14
    INPUT      shift, and go to state 15
    RETURN     shift, and go to state 16
    TILDE      shift, and go to state 17
    WHILE      shift, and go to state 18
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    NAME       shift, and go to state 21
    STRING     shift, and go to state 22
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24

    funcdef        go to state 26
    stmt           go to state 182
    simple_stmt    go to state 28
    small_stmt     go to state 29
    expr_stmt      go to state 30
    print_stmt     go to state 31
    input_stmt     go to state 32
    return_stmt    go to state 33
    global_stmt    go to state 34
    compound_stmt  go to state 35
    if_stmt        go to state 36
    while_stmt     go to state 37
    test           go to state 38
    or_test        go to state 39
    and_test       go to state 40
    not_test       go to state 41
    comparison     go to state 42
    expr           go to state 43
    xor_expr       go to state 44
    and_expr       go to state 45
    shift_expr     go to state 46
    arith_expr     go to state 47
    term           go to state 48
    factor         go to state 49
    pick_unop      go to state 50
    power          go to state 51
    atom           go to state 52


State 175

   64 star_ELIF: star_ELIF ELIF . test COLON suite

    LSQB    shift, and go to state 5
    LPAR    shift, and go to state 11
    NOT     shift, and go to state 13
    TILDE   shift, and go to state 17
    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    NAME    shift, and go to state 21
    STRING  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24

    test        go to state 183
    or_test     go to state 39
    and_test    go to state 40
    not_test    go to state 41
    comparison  go to state 42
    expr        go to state 43
    xor_expr    go to state 44
    and_expr    go to state 45
    shift_expr  go to state 46
    arith_expr  go to state 47
    term        go to state 48
    factor      go to state 49
    pick_unop   go to state 50
    power       go to state 51
    atom        go to state 52


State 176

   62 if_stmt: IF test COLON suite star_ELIF ELSE . COLON suite

    COLON  shift, and go to state 184


State 177

   16 opt_COMMA: COMMA .
  132 star_argument_COMMA: star_argument_COMMA test COMMA .

    RPAR      reduce using rule 16 (opt_COMMA)
    $default  reduce using rule 132 (star_argument_COMMA)


State 178

  131 arglist: star_argument_COMMA test opt_COMMA .

    $default  reduce using rule 131 (arglist)


State 179

   20 fplist: fpdef star_fpdef_notest . COMMA
   21       | fpdef star_fpdef_notest .
   22 star_fpdef_notest: star_fpdef_notest . COMMA fpdef

    COMMA  shift, and go to state 185

    $default  reduce using rule 21 (fplist)


State 180

   19 fpdef: LPAR fplist RPAR .

    $default  reduce using rule 19 (fpdef)


State 181

   68 suite: NEWLINE INDENT plus_stmt DEDENT .

    $default  reduce using rule 68 (suite)


State 182

   69 plus_stmt: plus_stmt stmt .

    $default  reduce using rule 69 (plus_stmt)


State 183

   64 star_ELIF: star_ELIF ELIF test . COLON suite

    COLON  shift, and go to state 186


State 184

   62 if_stmt: IF test COLON suite star_ELIF ELSE COLON . suite

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 187
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 185

   20 fplist: fpdef star_fpdef_notest COMMA .
   22 star_fpdef_notest: star_fpdef_notest COMMA . fpdef

    LPAR  shift, and go to state 158
    NAME  shift, and go to state 159

    $default  reduce using rule 20 (fplist)

    fpdef  go to state 188


State 186

   64 star_ELIF: star_ELIF ELIF test COLON . suite

    LSQB     shift, and go to state 5
    GLOBAL   shift, and go to state 9
    LPAR     shift, and go to state 11
    NEWLINE  shift, and go to state 144
    NOT      shift, and go to state 13
    PRINT    shift, and go to state 14
    INPUT    shift, and go to state 15
    RETURN   shift, and go to state 16
    TILDE    shift, and go to state 17
    INT      shift, and go to state 19
    FLOAT    shift, and go to state 20
    NAME     shift, and go to state 21
    STRING   shift, and go to state 22
    PLUS     shift, and go to state 23
    MINUS    shift, and go to state 24

    simple_stmt  go to state 145
    small_stmt   go to state 29
    expr_stmt    go to state 30
    print_stmt   go to state 31
    input_stmt   go to state 32
    return_stmt  go to state 33
    global_stmt  go to state 34
    suite        go to state 189
    test         go to state 38
    or_test      go to state 39
    and_test     go to state 40
    not_test     go to state 41
    comparison   go to state 42
    expr         go to state 43
    xor_expr     go to state 44
    and_expr     go to state 45
    shift_expr   go to state 46
    arith_expr   go to state 47
    term         go to state 48
    factor       go to state 49
    pick_unop    go to state 50
    power        go to state 51
    atom         go to state 52


State 187

   62 if_stmt: IF test COLON suite star_ELIF ELSE COLON suite .

    $default  reduce using rule 62 (if_stmt)


State 188

   22 star_fpdef_notest: star_fpdef_notest COMMA fpdef .

    $default  reduce using rule 22 (star_fpdef_notest)


State 189

   64 star_ELIF: star_ELIF ELIF test COLON suite .

    $default  reduce using rule 64 (star_ELIF)
