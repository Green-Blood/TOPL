Terminals unused in grammar

    AS
    ASSERT
    AT
    BACKQUOTE
    CLASS
    CONTINUE
    DEL
    DOT
    EXCEPT
    EXEC
    FINALLY
    FROM
    IMPORT
    IN
    IS
    LAMBDA
    LBRACE
    LSQB
    PASS
    RAISE
    RBRACE
    RSQB
    TRY
    WITH
    YIELD
    BREAK
    FOR


Grammar

    0 $accept: start $end

    1 start: file_input

    2 file_input: star_NEWLINE_stmt ENDMARKER

    3 pick_NEWLINE_stmt: NEWLINE
    4                  | stmt

    5 star_NEWLINE_stmt: star_NEWLINE_stmt pick_NEWLINE_stmt
    6                  | %empty

    7 opt_arglist: arglist
    8            | %empty

    9 funcdef: DEF NAME parameters COLON suite
   10        | COMPONENT NAME parameters COLON suite

   11 parameters: LPAR varargslist RPAR
   12           | LPAR RPAR

   13 varargslist: star_fpdef_COMMA fpdef opt_COMMA

   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef COMMA
   15                 | %empty

   16 opt_COMMA: COMMA
   17          | %empty

   18 fpdef: NAME
   19      | LPAR fplist RPAR

   20 fplist: fpdef star_fpdef_notest COMMA
   21       | fpdef star_fpdef_notest

   22 star_fpdef_notest: star_fpdef_notest COMMA fpdef
   23                  | %empty

   24 stmt: simple_stmt
   25     | compound_stmt

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI NEWLINE
   27            | small_stmt star_SEMI_small_stmt NEWLINE

   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI small_stmt
   29                     | %empty

   30 small_stmt: expr_stmt
   31           | print_stmt
   32           | return_stmt
   33           | global_stmt

   34 expr_stmt: test augassign test
   35          | test EQUAL star_EQUAL
   36          | test

   37 star_EQUAL: test EQUAL star_EQUAL
   38           | test

   39 augassign: PLUSEQUAL
   40          | MINEQUAL
   41          | STAREQUAL
   42          | SLASHEQUAL
   43          | PERCENTEQUAL
   44          | AMPEREQUAL
   45          | VBAREQUAL
   46          | CIRCUMFLEXEQUAL
   47          | LEFTSHIFTEQUAL
   48          | RIGHTSHIFTEQUAL
   49          | DOUBLESTAREQUAL
   50          | DOUBLESLASHEQUAL

   51 print_stmt: PRINT test

   52 return_stmt: RETURN test
   53            | RETURN

   54 global_stmt: GLOBAL NAME star_COMMA_NAME

   55 star_COMMA_NAME: star_COMMA_NAME COMMA NAME
   56                | %empty

   57 compound_stmt: if_stmt
   58              | while_stmt
   59              | funcdef

   60 if_stmt: IF test COLON suite star_ELIF ELSE COLON suite
   61        | IF test COLON suite star_ELIF

   62 star_ELIF: star_ELIF ELIF test COLON suite
   63          | %empty

   64 while_stmt: WHILE test COLON suite

   65 suite: simple_stmt
   66      | NEWLINE INDENT plus_stmt DEDENT

   67 plus_stmt: plus_stmt stmt
   68          | stmt

   69 test: or_test

   70 or_test: and_test
   71        | or_test OR and_test

   72 and_test: not_test
   73         | and_test AND not_test

   74 not_test: NOT not_test
   75         | comparison

   76 comparison: expr
   77           | comparison comp_op expr

   78 comp_op: LESS
   79        | GREATER
   80        | EQEQUAL
   81        | EQEQEQUAL
   82        | GREATEREQUAL
   83        | LESSEQUAL
   84        | GRLT
   85        | NOTEQUAL

   86 expr: xor_expr
   87     | expr BAR xor_expr

   88 xor_expr: and_expr
   89         | xor_expr CIRCUMFLEX and_expr

   90 and_expr: shift_expr
   91         | and_expr AMPERSAND shift_expr

   92 shift_expr: arith_expr
   93           | shift_expr pick_LEFTSHIFT_RIGHTSHIFT arith_expr

   94 pick_LEFTSHIFT_RIGHTSHIFT: LEFTSHIFT
   95                          | RIGHTSHIFT

   96 arith_expr: term
   97           | arith_expr pick_PLUS_MINUS term

   98 pick_PLUS_MINUS: PLUS
   99                | MINUS

  100 term: factor
  101     | term pick_multop factor

  102 pick_multop: STAR
  103            | SLASH
  104            | PERCENT
  105            | DOUBLESLASH

  106 factor: pick_unop factor
  107       | power

  108 pick_unop: PLUS
  109          | MINUS
  110          | TILDE

  111 power: atom star_trailer DOUBLESTAR factor
  112      | atom star_trailer

  113 star_trailer: star_trailer trailer
  114             | %empty

  115 atom: LPAR opt_test RPAR
  116     | NAME
  117     | STRING
  118     | INT
  119     | FLOAT

  120 opt_test: test
  121         | %empty

  122 trailer: LPAR opt_arglist RPAR

  123 arglist: star_argument_COMMA test opt_COMMA

  124 star_argument_COMMA: star_argument_COMMA test COMMA
  125                    | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AS (258)
    ASSERT (259)
    AT (260)
    BACKQUOTE (261)
    CLASS (262)
    CONTINUE (263)
    DEL (264)
    DOT (265)
    EXCEPT (266)
    EXEC (267)
    FINALLY (268)
    FROM (269)
    IMPORT (270)
    IN (271)
    IS (272)
    LAMBDA (273)
    LBRACE (274)
    LSQB (275)
    PASS (276)
    RAISE (277)
    RBRACE (278)
    RSQB (279)
    TRY (280)
    WITH (281)
    YIELD (282)
    AMPEREQUAL (283) 44
    AMPERSAND (284) 91
    AND (285) 73
    BAR (286) 87
    BREAK (287)
    CIRCUMFLEX (288) 89
    CIRCUMFLEXEQUAL (289) 46
    COLON (290) 9 10 60 61 62 64
    COMMA (291) 14 16 20 22 55 124
    DEDENT (292) 66
    DEF (293) 9
    COMPONENT (294) 10
    DOUBLESLASHEQUAL (295) 50
    DOUBLESTAREQUAL (296) 49
    ELIF (297) 62
    ELSE (298) 60
    ENDMARKER (299) 2
    EQEQUAL (300) 80
    EQEQEQUAL (301) 81
    FOR (302)
    GLOBAL (303) 54
    GREATER (304) 79
    GREATEREQUAL (305) 82
    GRLT (306) 84
    IF (307) 60 61
    INDENT (308) 66
    LEFTSHIFTEQUAL (309) 47
    LESS (310) 78
    LESSEQUAL (311) 83
    LPAR (312) 11 12 19 115 122
    MINEQUAL (313) 40
    NEWLINE (314) 3 26 27 66
    NOT (315) 74
    NOTEQUAL (316) 85
    OR (317) 71
    PERCENTEQUAL (318) 43
    PLUSEQUAL (319) 39
    PRINT (320) 51
    RETURN (321) 52 53
    RIGHTSHIFTEQUAL (322) 48
    RPAR (323) 11 12 19 115 122
    SEMI (324) 26 28
    SLASHEQUAL (325) 42
    STAREQUAL (326) 41
    TILDE (327) 110
    VBAREQUAL (328) 45
    WHILE (329) 64
    INT <intNumber> (330) 118
    FLOAT <fltNumber> (331) 119
    NAME <name> (332) 9 10 18 54 55 116
    STRING <str> (333) 117
    EQUAL (334) 35 37
    LEFTSHIFT (335) 94
    RIGHTSHIFT (336) 95
    PLUS (337) 98 108
    MINUS (338) 99 109
    STAR (339) 102
    SLASH (340) 103
    PERCENT (341) 104
    DOUBLESLASH (342) 105
    DOUBLESTAR (343) 111


Nonterminals, with rules where they appear

    $accept (89)
        on left: 0
    start (90)
        on left: 1
        on right: 0
    file_input (91)
        on left: 2
        on right: 1
    pick_NEWLINE_stmt (92)
        on left: 3 4
        on right: 5
    star_NEWLINE_stmt (93)
        on left: 5 6
        on right: 2 5
    opt_arglist <vec> (94)
        on left: 7 8
        on right: 122
    funcdef <node> (95)
        on left: 9 10
        on right: 59
    parameters <node> (96)
        on left: 11 12
        on right: 9 10
    varargslist <vec> (97)
        on left: 13
        on right: 11
    star_fpdef_COMMA <vec> (98)
        on left: 14 15
        on right: 13 14
    opt_COMMA <node> (99)
        on left: 16 17
        on right: 13 123
    fpdef <node> (100)
        on left: 18 19
        on right: 13 14 20 21 22
    fplist (101)
        on left: 20 21
        on right: 19
    star_fpdef_notest (102)
        on left: 22 23
        on right: 20 21 22
    stmt <node> (103)
        on left: 24 25
        on right: 4 67 68
    simple_stmt <node> (104)
        on left: 26 27
        on right: 24 65
    star_SEMI_small_stmt (105)
        on left: 28 29
        on right: 26 27 28
    small_stmt <node> (106)
        on left: 30 31 32 33
        on right: 26 27 28
    expr_stmt <node> (107)
        on left: 34 35 36
        on right: 30
    star_EQUAL <node> (108)
        on left: 37 38
        on right: 35 37
    augassign <intNumber> (109)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 34
    print_stmt <node> (110)
        on left: 51
        on right: 31
    return_stmt <node> (111)
        on left: 52 53
        on right: 32
    global_stmt (112)
        on left: 54
        on right: 33
    star_COMMA_NAME (113)
        on left: 55 56
        on right: 54 55
    compound_stmt <node> (114)
        on left: 57 58 59
        on right: 25
    if_stmt <node> (115)
        on left: 60 61
        on right: 57
    star_ELIF <node> (116)
        on left: 62 63
        on right: 60 61 62
    while_stmt <node> (117)
        on left: 64
        on right: 58
    suite <node> (118)
        on left: 65 66
        on right: 9 10 60 61 62 64
    plus_stmt <vec> (119)
        on left: 67 68
        on right: 66 67
    test <node> (120)
        on left: 69
        on right: 34 35 36 37 38 51 52 60 61 62 64 120 123 124
    or_test <node> (121)
        on left: 70 71
        on right: 69 71
    and_test <node> (122)
        on left: 72 73
        on right: 70 71 73
    not_test <node> (123)
        on left: 74 75
        on right: 72 73 74
    comparison <node> (124)
        on left: 76 77
        on right: 75 77
    comp_op <intNumber> (125)
        on left: 78 79 80 81 82 83 84 85
        on right: 77
    expr <node> (126)
        on left: 86 87
        on right: 76 77 87
    xor_expr <node> (127)
        on left: 88 89
        on right: 86 87 89
    and_expr <node> (128)
        on left: 90 91
        on right: 88 89 91
    shift_expr <node> (129)
        on left: 92 93
        on right: 90 91 93
    pick_LEFTSHIFT_RIGHTSHIFT <intNumber> (130)
        on left: 94 95
        on right: 93
    arith_expr <node> (131)
        on left: 96 97
        on right: 92 93 97
    pick_PLUS_MINUS <intNumber> (132)
        on left: 98 99
        on right: 97
    term <node> (133)
        on left: 100 101
        on right: 96 97 101
    pick_multop <intNumber> (134)
        on left: 102 103 104 105
        on right: 101
    factor <node> (135)
        on left: 106 107
        on right: 100 101 106 111
    pick_unop <intNumber> (136)
        on left: 108 109 110
        on right: 106
    power <node> (137)
        on left: 111 112
        on right: 107
    star_trailer <node> (138)
        on left: 113 114
        on right: 111 112 113
    atom <node> (139)
        on left: 115 116 117 118 119
        on right: 111 112
    opt_test <node> (140)
        on left: 120 121
        on right: 115
    trailer <node> (141)
        on left: 122
        on right: 113
    arglist <vec> (142)
        on left: 123
        on right: 7
    star_argument_COMMA <vec> (143)
        on left: 124 125
        on right: 123 124


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (star_NEWLINE_stmt)

    start              go to state 1
    file_input         go to state 2
    star_NEWLINE_stmt  go to state 3


State 1

    0 $accept: start . $end

    $end  shift, and go to state 4


State 2

    1 start: file_input .

    $default  reduce using rule 1 (start)


State 3

    2 file_input: star_NEWLINE_stmt . ENDMARKER
    5 star_NEWLINE_stmt: star_NEWLINE_stmt . pick_NEWLINE_stmt

    DEF        shift, and go to state 5
    COMPONENT  shift, and go to state 6
    ENDMARKER  shift, and go to state 7
    GLOBAL     shift, and go to state 8
    IF         shift, and go to state 9
    LPAR       shift, and go to state 10
    NEWLINE    shift, and go to state 11
    NOT        shift, and go to state 12
    PRINT      shift, and go to state 13
    RETURN     shift, and go to state 14
    TILDE      shift, and go to state 15
    WHILE      shift, and go to state 16
    INT        shift, and go to state 17
    FLOAT      shift, and go to state 18
    NAME       shift, and go to state 19
    STRING     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    pick_NEWLINE_stmt  go to state 23
    funcdef            go to state 24
    stmt               go to state 25
    simple_stmt        go to state 26
    small_stmt         go to state 27
    expr_stmt          go to state 28
    print_stmt         go to state 29
    return_stmt        go to state 30
    global_stmt        go to state 31
    compound_stmt      go to state 32
    if_stmt            go to state 33
    while_stmt         go to state 34
    test               go to state 35
    or_test            go to state 36
    and_test           go to state 37
    not_test           go to state 38
    comparison         go to state 39
    expr               go to state 40
    xor_expr           go to state 41
    and_expr           go to state 42
    shift_expr         go to state 43
    arith_expr         go to state 44
    term               go to state 45
    factor             go to state 46
    pick_unop          go to state 47
    power              go to state 48
    atom               go to state 49


State 4

    0 $accept: start $end .

    $default  accept


State 5

    9 funcdef: DEF . NAME parameters COLON suite

    NAME  shift, and go to state 50


State 6

   10 funcdef: COMPONENT . NAME parameters COLON suite

    NAME  shift, and go to state 51


State 7

    2 file_input: star_NEWLINE_stmt ENDMARKER .

    $default  reduce using rule 2 (file_input)


State 8

   54 global_stmt: GLOBAL . NAME star_COMMA_NAME

    NAME  shift, and go to state 52


State 9

   60 if_stmt: IF . test COLON suite star_ELIF ELSE COLON suite
   61        | IF . test COLON suite star_ELIF

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 53
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 10

  115 atom: LPAR . opt_test RPAR

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    $default  reduce using rule 121 (opt_test)

    test        go to state 54
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49
    opt_test    go to state 55


State 11

    3 pick_NEWLINE_stmt: NEWLINE .

    $default  reduce using rule 3 (pick_NEWLINE_stmt)


State 12

   74 not_test: NOT . not_test

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    not_test    go to state 56
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 13

   51 print_stmt: PRINT . test

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 57
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 14

   52 return_stmt: RETURN . test
   53            | RETURN .

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    $default  reduce using rule 53 (return_stmt)

    test        go to state 58
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 15

  110 pick_unop: TILDE .

    $default  reduce using rule 110 (pick_unop)


State 16

   64 while_stmt: WHILE . test COLON suite

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 59
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 17

  118 atom: INT .

    $default  reduce using rule 118 (atom)


State 18

  119 atom: FLOAT .

    $default  reduce using rule 119 (atom)


State 19

  116 atom: NAME .

    $default  reduce using rule 116 (atom)


State 20

  117 atom: STRING .

    $default  reduce using rule 117 (atom)


State 21

  108 pick_unop: PLUS .

    $default  reduce using rule 108 (pick_unop)


State 22

  109 pick_unop: MINUS .

    $default  reduce using rule 109 (pick_unop)


State 23

    5 star_NEWLINE_stmt: star_NEWLINE_stmt pick_NEWLINE_stmt .

    $default  reduce using rule 5 (star_NEWLINE_stmt)


State 24

   59 compound_stmt: funcdef .

    $default  reduce using rule 59 (compound_stmt)


State 25

    4 pick_NEWLINE_stmt: stmt .

    $default  reduce using rule 4 (pick_NEWLINE_stmt)


State 26

   24 stmt: simple_stmt .

    $default  reduce using rule 24 (stmt)


State 27

   26 simple_stmt: small_stmt . star_SEMI_small_stmt SEMI NEWLINE
   27            | small_stmt . star_SEMI_small_stmt NEWLINE

    $default  reduce using rule 29 (star_SEMI_small_stmt)

    star_SEMI_small_stmt  go to state 60


State 28

   30 small_stmt: expr_stmt .

    $default  reduce using rule 30 (small_stmt)


State 29

   31 small_stmt: print_stmt .

    $default  reduce using rule 31 (small_stmt)


State 30

   32 small_stmt: return_stmt .

    $default  reduce using rule 32 (small_stmt)


State 31

   33 small_stmt: global_stmt .

    $default  reduce using rule 33 (small_stmt)


State 32

   25 stmt: compound_stmt .

    $default  reduce using rule 25 (stmt)


State 33

   57 compound_stmt: if_stmt .

    $default  reduce using rule 57 (compound_stmt)


State 34

   58 compound_stmt: while_stmt .

    $default  reduce using rule 58 (compound_stmt)


State 35

   34 expr_stmt: test . augassign test
   35          | test . EQUAL star_EQUAL
   36          | test .

    AMPEREQUAL        shift, and go to state 61
    CIRCUMFLEXEQUAL   shift, and go to state 62
    DOUBLESLASHEQUAL  shift, and go to state 63
    DOUBLESTAREQUAL   shift, and go to state 64
    LEFTSHIFTEQUAL    shift, and go to state 65
    MINEQUAL          shift, and go to state 66
    PERCENTEQUAL      shift, and go to state 67
    PLUSEQUAL         shift, and go to state 68
    RIGHTSHIFTEQUAL   shift, and go to state 69
    SLASHEQUAL        shift, and go to state 70
    STAREQUAL         shift, and go to state 71
    VBAREQUAL         shift, and go to state 72
    EQUAL             shift, and go to state 73

    $default  reduce using rule 36 (expr_stmt)

    augassign  go to state 74


State 36

   69 test: or_test .
   71 or_test: or_test . OR and_test

    OR  shift, and go to state 75

    $default  reduce using rule 69 (test)


State 37

   70 or_test: and_test .
   73 and_test: and_test . AND not_test

    AND  shift, and go to state 76

    $default  reduce using rule 70 (or_test)


State 38

   72 and_test: not_test .

    $default  reduce using rule 72 (and_test)


State 39

   75 not_test: comparison .
   77 comparison: comparison . comp_op expr

    EQEQUAL       shift, and go to state 77
    EQEQEQUAL     shift, and go to state 78
    GREATER       shift, and go to state 79
    GREATEREQUAL  shift, and go to state 80
    GRLT          shift, and go to state 81
    LESS          shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    NOTEQUAL      shift, and go to state 84

    $default  reduce using rule 75 (not_test)

    comp_op  go to state 85


State 40

   76 comparison: expr .
   87 expr: expr . BAR xor_expr

    BAR  shift, and go to state 86

    $default  reduce using rule 76 (comparison)


State 41

   86 expr: xor_expr .
   89 xor_expr: xor_expr . CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 87

    $default  reduce using rule 86 (expr)


State 42

   88 xor_expr: and_expr .
   91 and_expr: and_expr . AMPERSAND shift_expr

    AMPERSAND  shift, and go to state 88

    $default  reduce using rule 88 (xor_expr)


State 43

   90 and_expr: shift_expr .
   93 shift_expr: shift_expr . pick_LEFTSHIFT_RIGHTSHIFT arith_expr

    LEFTSHIFT   shift, and go to state 89
    RIGHTSHIFT  shift, and go to state 90

    $default  reduce using rule 90 (and_expr)

    pick_LEFTSHIFT_RIGHTSHIFT  go to state 91


State 44

   92 shift_expr: arith_expr .
   97 arith_expr: arith_expr . pick_PLUS_MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 92 (shift_expr)

    pick_PLUS_MINUS  go to state 94


State 45

   96 arith_expr: term .
  101 term: term . pick_multop factor

    STAR         shift, and go to state 95
    SLASH        shift, and go to state 96
    PERCENT      shift, and go to state 97
    DOUBLESLASH  shift, and go to state 98

    $default  reduce using rule 96 (arith_expr)

    pick_multop  go to state 99


State 46

  100 term: factor .

    $default  reduce using rule 100 (term)


State 47

  106 factor: pick_unop . factor

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    factor     go to state 100
    pick_unop  go to state 47
    power      go to state 48
    atom       go to state 49


State 48

  107 factor: power .

    $default  reduce using rule 107 (factor)


State 49

  111 power: atom . star_trailer DOUBLESTAR factor
  112      | atom . star_trailer

    $default  reduce using rule 114 (star_trailer)

    star_trailer  go to state 101


State 50

    9 funcdef: DEF NAME . parameters COLON suite

    LPAR  shift, and go to state 102

    parameters  go to state 103


State 51

   10 funcdef: COMPONENT NAME . parameters COLON suite

    LPAR  shift, and go to state 102

    parameters  go to state 104


State 52

   54 global_stmt: GLOBAL NAME . star_COMMA_NAME

    $default  reduce using rule 56 (star_COMMA_NAME)

    star_COMMA_NAME  go to state 105


State 53

   60 if_stmt: IF test . COLON suite star_ELIF ELSE COLON suite
   61        | IF test . COLON suite star_ELIF

    COLON  shift, and go to state 106


State 54

  120 opt_test: test .

    $default  reduce using rule 120 (opt_test)


State 55

  115 atom: LPAR opt_test . RPAR

    RPAR  shift, and go to state 107


State 56

   74 not_test: NOT not_test .

    $default  reduce using rule 74 (not_test)


State 57

   51 print_stmt: PRINT test .

    $default  reduce using rule 51 (print_stmt)


State 58

   52 return_stmt: RETURN test .

    $default  reduce using rule 52 (return_stmt)


State 59

   64 while_stmt: WHILE test . COLON suite

    COLON  shift, and go to state 108


State 60

   26 simple_stmt: small_stmt star_SEMI_small_stmt . SEMI NEWLINE
   27            | small_stmt star_SEMI_small_stmt . NEWLINE
   28 star_SEMI_small_stmt: star_SEMI_small_stmt . SEMI small_stmt

    NEWLINE  shift, and go to state 109
    SEMI     shift, and go to state 110


State 61

   44 augassign: AMPEREQUAL .

    $default  reduce using rule 44 (augassign)


State 62

   46 augassign: CIRCUMFLEXEQUAL .

    $default  reduce using rule 46 (augassign)


State 63

   50 augassign: DOUBLESLASHEQUAL .

    $default  reduce using rule 50 (augassign)


State 64

   49 augassign: DOUBLESTAREQUAL .

    $default  reduce using rule 49 (augassign)


State 65

   47 augassign: LEFTSHIFTEQUAL .

    $default  reduce using rule 47 (augassign)


State 66

   40 augassign: MINEQUAL .

    $default  reduce using rule 40 (augassign)


State 67

   43 augassign: PERCENTEQUAL .

    $default  reduce using rule 43 (augassign)


State 68

   39 augassign: PLUSEQUAL .

    $default  reduce using rule 39 (augassign)


State 69

   48 augassign: RIGHTSHIFTEQUAL .

    $default  reduce using rule 48 (augassign)


State 70

   42 augassign: SLASHEQUAL .

    $default  reduce using rule 42 (augassign)


State 71

   41 augassign: STAREQUAL .

    $default  reduce using rule 41 (augassign)


State 72

   45 augassign: VBAREQUAL .

    $default  reduce using rule 45 (augassign)


State 73

   35 expr_stmt: test EQUAL . star_EQUAL

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    star_EQUAL  go to state 111
    test        go to state 112
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 74

   34 expr_stmt: test augassign . test

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 113
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 75

   71 or_test: or_test OR . and_test

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    and_test    go to state 114
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 76

   73 and_test: and_test AND . not_test

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    not_test    go to state 115
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 77

   80 comp_op: EQEQUAL .

    $default  reduce using rule 80 (comp_op)


State 78

   81 comp_op: EQEQEQUAL .

    $default  reduce using rule 81 (comp_op)


State 79

   79 comp_op: GREATER .

    $default  reduce using rule 79 (comp_op)


State 80

   82 comp_op: GREATEREQUAL .

    $default  reduce using rule 82 (comp_op)


State 81

   84 comp_op: GRLT .

    $default  reduce using rule 84 (comp_op)


State 82

   78 comp_op: LESS .

    $default  reduce using rule 78 (comp_op)


State 83

   83 comp_op: LESSEQUAL .

    $default  reduce using rule 83 (comp_op)


State 84

   85 comp_op: NOTEQUAL .

    $default  reduce using rule 85 (comp_op)


State 85

   77 comparison: comparison comp_op . expr

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    expr        go to state 116
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 86

   87 expr: expr BAR . xor_expr

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    xor_expr    go to state 117
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 87

   89 xor_expr: xor_expr CIRCUMFLEX . and_expr

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    and_expr    go to state 118
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 88

   91 and_expr: and_expr AMPERSAND . shift_expr

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    shift_expr  go to state 119
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 89

   94 pick_LEFTSHIFT_RIGHTSHIFT: LEFTSHIFT .

    $default  reduce using rule 94 (pick_LEFTSHIFT_RIGHTSHIFT)


State 90

   95 pick_LEFTSHIFT_RIGHTSHIFT: RIGHTSHIFT .

    $default  reduce using rule 95 (pick_LEFTSHIFT_RIGHTSHIFT)


State 91

   93 shift_expr: shift_expr pick_LEFTSHIFT_RIGHTSHIFT . arith_expr

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    arith_expr  go to state 120
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 92

   98 pick_PLUS_MINUS: PLUS .

    $default  reduce using rule 98 (pick_PLUS_MINUS)


State 93

   99 pick_PLUS_MINUS: MINUS .

    $default  reduce using rule 99 (pick_PLUS_MINUS)


State 94

   97 arith_expr: arith_expr pick_PLUS_MINUS . term

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    term       go to state 121
    factor     go to state 46
    pick_unop  go to state 47
    power      go to state 48
    atom       go to state 49


State 95

  102 pick_multop: STAR .

    $default  reduce using rule 102 (pick_multop)


State 96

  103 pick_multop: SLASH .

    $default  reduce using rule 103 (pick_multop)


State 97

  104 pick_multop: PERCENT .

    $default  reduce using rule 104 (pick_multop)


State 98

  105 pick_multop: DOUBLESLASH .

    $default  reduce using rule 105 (pick_multop)


State 99

  101 term: term pick_multop . factor

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    factor     go to state 122
    pick_unop  go to state 47
    power      go to state 48
    atom       go to state 49


State 100

  106 factor: pick_unop factor .

    $default  reduce using rule 106 (factor)


State 101

  111 power: atom star_trailer . DOUBLESTAR factor
  112      | atom star_trailer .
  113 star_trailer: star_trailer . trailer

    LPAR        shift, and go to state 123
    DOUBLESTAR  shift, and go to state 124

    $default  reduce using rule 112 (power)

    trailer  go to state 125


State 102

   11 parameters: LPAR . varargslist RPAR
   12           | LPAR . RPAR

    RPAR  shift, and go to state 126

    $default  reduce using rule 15 (star_fpdef_COMMA)

    varargslist       go to state 127
    star_fpdef_COMMA  go to state 128


State 103

    9 funcdef: DEF NAME parameters . COLON suite

    COLON  shift, and go to state 129


State 104

   10 funcdef: COMPONENT NAME parameters . COLON suite

    COLON  shift, and go to state 130


State 105

   54 global_stmt: GLOBAL NAME star_COMMA_NAME .
   55 star_COMMA_NAME: star_COMMA_NAME . COMMA NAME

    COMMA  shift, and go to state 131

    $default  reduce using rule 54 (global_stmt)


State 106

   60 if_stmt: IF test COLON . suite star_ELIF ELSE COLON suite
   61        | IF test COLON . suite star_ELIF

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 134
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 107

  115 atom: LPAR opt_test RPAR .

    $default  reduce using rule 115 (atom)


State 108

   64 while_stmt: WHILE test COLON . suite

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 135
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 109

   27 simple_stmt: small_stmt star_SEMI_small_stmt NEWLINE .

    $default  reduce using rule 27 (simple_stmt)


State 110

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI . NEWLINE
   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI . small_stmt

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 136
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    small_stmt   go to state 137
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 111

   35 expr_stmt: test EQUAL star_EQUAL .

    $default  reduce using rule 35 (expr_stmt)


State 112

   37 star_EQUAL: test . EQUAL star_EQUAL
   38           | test .

    EQUAL  shift, and go to state 138

    $default  reduce using rule 38 (star_EQUAL)


State 113

   34 expr_stmt: test augassign test .

    $default  reduce using rule 34 (expr_stmt)


State 114

   71 or_test: or_test OR and_test .
   73 and_test: and_test . AND not_test

    AND  shift, and go to state 76

    $default  reduce using rule 71 (or_test)


State 115

   73 and_test: and_test AND not_test .

    $default  reduce using rule 73 (and_test)


State 116

   77 comparison: comparison comp_op expr .
   87 expr: expr . BAR xor_expr

    BAR  shift, and go to state 86

    $default  reduce using rule 77 (comparison)


State 117

   87 expr: expr BAR xor_expr .
   89 xor_expr: xor_expr . CIRCUMFLEX and_expr

    CIRCUMFLEX  shift, and go to state 87

    $default  reduce using rule 87 (expr)


State 118

   89 xor_expr: xor_expr CIRCUMFLEX and_expr .
   91 and_expr: and_expr . AMPERSAND shift_expr

    AMPERSAND  shift, and go to state 88

    $default  reduce using rule 89 (xor_expr)


State 119

   91 and_expr: and_expr AMPERSAND shift_expr .
   93 shift_expr: shift_expr . pick_LEFTSHIFT_RIGHTSHIFT arith_expr

    LEFTSHIFT   shift, and go to state 89
    RIGHTSHIFT  shift, and go to state 90

    $default  reduce using rule 91 (and_expr)

    pick_LEFTSHIFT_RIGHTSHIFT  go to state 91


State 120

   93 shift_expr: shift_expr pick_LEFTSHIFT_RIGHTSHIFT arith_expr .
   97 arith_expr: arith_expr . pick_PLUS_MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 93 (shift_expr)

    pick_PLUS_MINUS  go to state 94


State 121

   97 arith_expr: arith_expr pick_PLUS_MINUS term .
  101 term: term . pick_multop factor

    STAR         shift, and go to state 95
    SLASH        shift, and go to state 96
    PERCENT      shift, and go to state 97
    DOUBLESLASH  shift, and go to state 98

    $default  reduce using rule 97 (arith_expr)

    pick_multop  go to state 99


State 122

  101 term: term pick_multop factor .

    $default  reduce using rule 101 (term)


State 123

  122 trailer: LPAR . opt_arglist RPAR

    RPAR      reduce using rule 8 (opt_arglist)
    $default  reduce using rule 125 (star_argument_COMMA)

    opt_arglist          go to state 139
    arglist              go to state 140
    star_argument_COMMA  go to state 141


State 124

  111 power: atom star_trailer DOUBLESTAR . factor

    LPAR    shift, and go to state 10
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    factor     go to state 142
    pick_unop  go to state 47
    power      go to state 48
    atom       go to state 49


State 125

  113 star_trailer: star_trailer trailer .

    $default  reduce using rule 113 (star_trailer)


State 126

   12 parameters: LPAR RPAR .

    $default  reduce using rule 12 (parameters)


State 127

   11 parameters: LPAR varargslist . RPAR

    RPAR  shift, and go to state 143


State 128

   13 varargslist: star_fpdef_COMMA . fpdef opt_COMMA
   14 star_fpdef_COMMA: star_fpdef_COMMA . fpdef COMMA

    LPAR  shift, and go to state 144
    NAME  shift, and go to state 145

    fpdef  go to state 146


State 129

    9 funcdef: DEF NAME parameters COLON . suite

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 147
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 130

   10 funcdef: COMPONENT NAME parameters COLON . suite

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 148
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 131

   55 star_COMMA_NAME: star_COMMA_NAME COMMA . NAME

    NAME  shift, and go to state 149


State 132

   66 suite: NEWLINE . INDENT plus_stmt DEDENT

    INDENT  shift, and go to state 150


State 133

   65 suite: simple_stmt .

    $default  reduce using rule 65 (suite)


State 134

   60 if_stmt: IF test COLON suite . star_ELIF ELSE COLON suite
   61        | IF test COLON suite . star_ELIF

    $default  reduce using rule 63 (star_ELIF)

    star_ELIF  go to state 151


State 135

   64 while_stmt: WHILE test COLON suite .

    $default  reduce using rule 64 (while_stmt)


State 136

   26 simple_stmt: small_stmt star_SEMI_small_stmt SEMI NEWLINE .

    $default  reduce using rule 26 (simple_stmt)


State 137

   28 star_SEMI_small_stmt: star_SEMI_small_stmt SEMI small_stmt .

    $default  reduce using rule 28 (star_SEMI_small_stmt)


State 138

   37 star_EQUAL: test EQUAL . star_EQUAL

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    star_EQUAL  go to state 152
    test        go to state 112
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 139

  122 trailer: LPAR opt_arglist . RPAR

    RPAR  shift, and go to state 153


State 140

    7 opt_arglist: arglist .

    $default  reduce using rule 7 (opt_arglist)


State 141

  123 arglist: star_argument_COMMA . test opt_COMMA
  124 star_argument_COMMA: star_argument_COMMA . test COMMA

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 154
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 142

  111 power: atom star_trailer DOUBLESTAR factor .

    $default  reduce using rule 111 (power)


State 143

   11 parameters: LPAR varargslist RPAR .

    $default  reduce using rule 11 (parameters)


State 144

   19 fpdef: LPAR . fplist RPAR

    LPAR  shift, and go to state 144
    NAME  shift, and go to state 145

    fpdef   go to state 155
    fplist  go to state 156


State 145

   18 fpdef: NAME .

    $default  reduce using rule 18 (fpdef)


State 146

   13 varargslist: star_fpdef_COMMA fpdef . opt_COMMA
   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef . COMMA

    COMMA  shift, and go to state 157

    $default  reduce using rule 17 (opt_COMMA)

    opt_COMMA  go to state 158


State 147

    9 funcdef: DEF NAME parameters COLON suite .

    $default  reduce using rule 9 (funcdef)


State 148

   10 funcdef: COMPONENT NAME parameters COLON suite .

    $default  reduce using rule 10 (funcdef)


State 149

   55 star_COMMA_NAME: star_COMMA_NAME COMMA NAME .

    $default  reduce using rule 55 (star_COMMA_NAME)


State 150

   66 suite: NEWLINE INDENT . plus_stmt DEDENT

    DEF        shift, and go to state 5
    COMPONENT  shift, and go to state 6
    GLOBAL     shift, and go to state 8
    IF         shift, and go to state 9
    LPAR       shift, and go to state 10
    NOT        shift, and go to state 12
    PRINT      shift, and go to state 13
    RETURN     shift, and go to state 14
    TILDE      shift, and go to state 15
    WHILE      shift, and go to state 16
    INT        shift, and go to state 17
    FLOAT      shift, and go to state 18
    NAME       shift, and go to state 19
    STRING     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    funcdef        go to state 24
    stmt           go to state 159
    simple_stmt    go to state 26
    small_stmt     go to state 27
    expr_stmt      go to state 28
    print_stmt     go to state 29
    return_stmt    go to state 30
    global_stmt    go to state 31
    compound_stmt  go to state 32
    if_stmt        go to state 33
    while_stmt     go to state 34
    plus_stmt      go to state 160
    test           go to state 35
    or_test        go to state 36
    and_test       go to state 37
    not_test       go to state 38
    comparison     go to state 39
    expr           go to state 40
    xor_expr       go to state 41
    and_expr       go to state 42
    shift_expr     go to state 43
    arith_expr     go to state 44
    term           go to state 45
    factor         go to state 46
    pick_unop      go to state 47
    power          go to state 48
    atom           go to state 49


State 151

   60 if_stmt: IF test COLON suite star_ELIF . ELSE COLON suite
   61        | IF test COLON suite star_ELIF .
   62 star_ELIF: star_ELIF . ELIF test COLON suite

    ELIF  shift, and go to state 161
    ELSE  shift, and go to state 162

    $default  reduce using rule 61 (if_stmt)


State 152

   37 star_EQUAL: test EQUAL star_EQUAL .

    $default  reduce using rule 37 (star_EQUAL)


State 153

  122 trailer: LPAR opt_arglist RPAR .

    $default  reduce using rule 122 (trailer)


State 154

  123 arglist: star_argument_COMMA test . opt_COMMA
  124 star_argument_COMMA: star_argument_COMMA test . COMMA

    COMMA  shift, and go to state 163

    $default  reduce using rule 17 (opt_COMMA)

    opt_COMMA  go to state 164


State 155

   20 fplist: fpdef . star_fpdef_notest COMMA
   21       | fpdef . star_fpdef_notest

    $default  reduce using rule 23 (star_fpdef_notest)

    star_fpdef_notest  go to state 165


State 156

   19 fpdef: LPAR fplist . RPAR

    RPAR  shift, and go to state 166


State 157

   14 star_fpdef_COMMA: star_fpdef_COMMA fpdef COMMA .
   16 opt_COMMA: COMMA .

    RPAR      reduce using rule 16 (opt_COMMA)
    $default  reduce using rule 14 (star_fpdef_COMMA)


State 158

   13 varargslist: star_fpdef_COMMA fpdef opt_COMMA .

    $default  reduce using rule 13 (varargslist)


State 159

   68 plus_stmt: stmt .

    $default  reduce using rule 68 (plus_stmt)


State 160

   66 suite: NEWLINE INDENT plus_stmt . DEDENT
   67 plus_stmt: plus_stmt . stmt

    DEDENT     shift, and go to state 167
    DEF        shift, and go to state 5
    COMPONENT  shift, and go to state 6
    GLOBAL     shift, and go to state 8
    IF         shift, and go to state 9
    LPAR       shift, and go to state 10
    NOT        shift, and go to state 12
    PRINT      shift, and go to state 13
    RETURN     shift, and go to state 14
    TILDE      shift, and go to state 15
    WHILE      shift, and go to state 16
    INT        shift, and go to state 17
    FLOAT      shift, and go to state 18
    NAME       shift, and go to state 19
    STRING     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    funcdef        go to state 24
    stmt           go to state 168
    simple_stmt    go to state 26
    small_stmt     go to state 27
    expr_stmt      go to state 28
    print_stmt     go to state 29
    return_stmt    go to state 30
    global_stmt    go to state 31
    compound_stmt  go to state 32
    if_stmt        go to state 33
    while_stmt     go to state 34
    test           go to state 35
    or_test        go to state 36
    and_test       go to state 37
    not_test       go to state 38
    comparison     go to state 39
    expr           go to state 40
    xor_expr       go to state 41
    and_expr       go to state 42
    shift_expr     go to state 43
    arith_expr     go to state 44
    term           go to state 45
    factor         go to state 46
    pick_unop      go to state 47
    power          go to state 48
    atom           go to state 49


State 161

   62 star_ELIF: star_ELIF ELIF . test COLON suite

    LPAR    shift, and go to state 10
    NOT     shift, and go to state 12
    TILDE   shift, and go to state 15
    INT     shift, and go to state 17
    FLOAT   shift, and go to state 18
    NAME    shift, and go to state 19
    STRING  shift, and go to state 20
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    test        go to state 169
    or_test     go to state 36
    and_test    go to state 37
    not_test    go to state 38
    comparison  go to state 39
    expr        go to state 40
    xor_expr    go to state 41
    and_expr    go to state 42
    shift_expr  go to state 43
    arith_expr  go to state 44
    term        go to state 45
    factor      go to state 46
    pick_unop   go to state 47
    power       go to state 48
    atom        go to state 49


State 162

   60 if_stmt: IF test COLON suite star_ELIF ELSE . COLON suite

    COLON  shift, and go to state 170


State 163

   16 opt_COMMA: COMMA .
  124 star_argument_COMMA: star_argument_COMMA test COMMA .

    RPAR      reduce using rule 16 (opt_COMMA)
    $default  reduce using rule 124 (star_argument_COMMA)


State 164

  123 arglist: star_argument_COMMA test opt_COMMA .

    $default  reduce using rule 123 (arglist)


State 165

   20 fplist: fpdef star_fpdef_notest . COMMA
   21       | fpdef star_fpdef_notest .
   22 star_fpdef_notest: star_fpdef_notest . COMMA fpdef

    COMMA  shift, and go to state 171

    $default  reduce using rule 21 (fplist)


State 166

   19 fpdef: LPAR fplist RPAR .

    $default  reduce using rule 19 (fpdef)


State 167

   66 suite: NEWLINE INDENT plus_stmt DEDENT .

    $default  reduce using rule 66 (suite)


State 168

   67 plus_stmt: plus_stmt stmt .

    $default  reduce using rule 67 (plus_stmt)


State 169

   62 star_ELIF: star_ELIF ELIF test . COLON suite

    COLON  shift, and go to state 172


State 170

   60 if_stmt: IF test COLON suite star_ELIF ELSE COLON . suite

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 173
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 171

   20 fplist: fpdef star_fpdef_notest COMMA .
   22 star_fpdef_notest: star_fpdef_notest COMMA . fpdef

    LPAR  shift, and go to state 144
    NAME  shift, and go to state 145

    $default  reduce using rule 20 (fplist)

    fpdef  go to state 174


State 172

   62 star_ELIF: star_ELIF ELIF test COLON . suite

    GLOBAL   shift, and go to state 8
    LPAR     shift, and go to state 10
    NEWLINE  shift, and go to state 132
    NOT      shift, and go to state 12
    PRINT    shift, and go to state 13
    RETURN   shift, and go to state 14
    TILDE    shift, and go to state 15
    INT      shift, and go to state 17
    FLOAT    shift, and go to state 18
    NAME     shift, and go to state 19
    STRING   shift, and go to state 20
    PLUS     shift, and go to state 21
    MINUS    shift, and go to state 22

    simple_stmt  go to state 133
    small_stmt   go to state 27
    expr_stmt    go to state 28
    print_stmt   go to state 29
    return_stmt  go to state 30
    global_stmt  go to state 31
    suite        go to state 175
    test         go to state 35
    or_test      go to state 36
    and_test     go to state 37
    not_test     go to state 38
    comparison   go to state 39
    expr         go to state 40
    xor_expr     go to state 41
    and_expr     go to state 42
    shift_expr   go to state 43
    arith_expr   go to state 44
    term         go to state 45
    factor       go to state 46
    pick_unop    go to state 47
    power        go to state 48
    atom         go to state 49


State 173

   60 if_stmt: IF test COLON suite star_ELIF ELSE COLON suite .

    $default  reduce using rule 60 (if_stmt)


State 174

   22 star_fpdef_notest: star_fpdef_notest COMMA fpdef .

    $default  reduce using rule 22 (star_fpdef_notest)


State 175

   62 star_ELIF: star_ELIF ELIF test COLON suite .

    $default  reduce using rule 62 (star_ELIF)
